/* Copyright (C) 1991-2015 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.
   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.
   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */
/* This header is separate from features.h so that the compiler can
   include it implicitly at the start of every compilation.  It must
   not itself include <features.h> or any other header that includes
   <features.h> because the implicit include comes before any feature
   test macros that may be defined in a source file before it first
   explicitly includes a system header.  GCC knows the name of this
   header in order to preinclude it.  */
/* glibc's intent is to support the IEC 559 math functionality, real
   and complex.  If the GCC (4.9 and later) predefined macros
   specifying compiler intent are available, use them to determine
   whether the overall intent is to support these features; otherwise,
   presume an older compiler has intent to support these features and
   define these macros by default.  */
/* wchar_t uses Unicode 7.0.0.  Version 7.0 of the Unicode Standard is
   synchronized with ISO/IEC 10646:2012, plus Amendments 1 (published
   on April, 2013) and 2 (not yet published as of February, 2015).
   Additionally, it includes the accelerated publication of U+20BD
   RUBLE SIGN.  Therefore Unicode 7.0.0 is between 10646:2012 and
   10646:2014, and so we use the date ISO/IEC 10646:2012 Amd.1 was
   published.  */
/* We do not support C11 <threads.h>.  */
      subroutine BWENOFACEVALUES_4D(
     & facePhi
     & ,ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
     & ,ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
     & ,nfacePhicomp
     & ,cellPhi
     & ,icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
     & ,icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
     & ,ncellPhicomp
     & ,faceVel
     & ,ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
     & ,ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
     & ,ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
     & ,ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
     & ,idir
     & )
      implicit none
      integer*8 ch_flops
      COMMON/ch_timer/ ch_flops
      integer CHF_ID(0:5,0:5)
      data CHF_ID/ 1,0,0,0,0,0 ,0,1,0,0,0,0 ,0,0,1,0,0,0 ,0,0,0,1,0,0 ,0,0,0,0,1,0 ,0,0,0,0,0,1 /
      integer nfacePhicomp
      integer ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
      integer ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
      REAL*8 facePhi(
     & ifacePhilo0:ifacePhihi0,
     & ifacePhilo1:ifacePhihi1,
     & ifacePhilo2:ifacePhihi2,
     & ifacePhilo3:ifacePhihi3,
     & 0:nfacePhicomp-1)
      integer ncellPhicomp
      integer icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
      integer icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
      REAL*8 cellPhi(
     & icellPhilo0:icellPhihi0,
     & icellPhilo1:icellPhihi1,
     & icellPhilo2:icellPhihi2,
     & icellPhilo3:icellPhihi3,
     & 0:ncellPhicomp-1)
      integer ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
      integer ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
      REAL*8 faceVel(
     & ifaceVello0:ifaceVelhi0,
     & ifaceVello1:ifaceVelhi1,
     & ifaceVello2:ifaceVelhi2,
     & ifaceVello3:ifaceVelhi3)
      integer ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
      integer ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
      integer idir
      integer n, i,j,k,l
      integer ii,jj,kk,ll
      REAL*8 eps
      REAL*8 fl,fr,bl,br,al,ar,wl,wr
      REAL*8 c1l,c2l,c1r,c2r
      REAL*8 wmax,wmin
      REAL*8 onept5
      ii = CHF_ID(idir, 0)
      jj = CHF_ID(idir, 1)
      kk = CHF_ID(idir, 2)
      ll = CHF_ID(idir, 3)
      onept5 = (1.0d0) + (0.500d0)
      eps = 1.d-6
      do n=0, (nfacePhicomp-1)
      do l = ifaceBoxlo3,ifaceBoxhi3
      do k = ifaceBoxlo2,ifaceBoxhi2
      do j = ifaceBoxlo1,ifaceBoxhi1
      do i = ifaceBoxlo0,ifaceBoxhi0
        fl = (1.000d0 / 6.000d0)*(
     & - cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & + (5.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (2.0d0)*cellPhi(i,j,k,l,n) )
        fr = (1.000d0 / 6.000d0)*(
     & (2.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (5.0d0)*cellPhi(i,j,k,l,n)
     & - cellPhi(i+ii,j+jj,k+kk,l+ll,n) )
        c1l = ( cellPhi(i,j,k,l,n)
     & - (2.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n) )
        c2l = ( cellPhi(i,j,k,l,n)
     & - cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n) )
        c1r = ( cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & - (2.0d0)*cellPhi(i,j,k,l,n)
     & + cellPhi(i-ii,j-jj,k-kk,l-ll,n) )
        c2r = ( cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & - cellPhi(i-ii,j-jj,k-kk,l-ll,n) )
        bl = (4.0d0)*(c1l**2)*(1.000d0 / 3.000d0)+(0.500d0)*c1l*c2l+(0.250d0)*c2l**2
        br = (4.0d0)*(c1r**2)*(1.000d0 / 3.000d0)-(0.500d0)*c1r*c2r+(0.250d0)*c2r**2
        al = (1.0d0)/((eps+bl)**2)
        ar = (1.0d0)/((eps+br)**2)
        wl = al/(al+ar)
        wr = ar/(al+ar)
        al = wl*((3.0d0)*(0.250d0)+wl*(wl-onept5))
        ar = wr*((3.0d0)*(0.250d0)+wr*(wr-onept5))
        wl = al/(al+ar)
        wr = ar/(al+ar)
        wmax = max(wl,wr)
        wmin = min(wl,wr)
        if( faceVel(i,j,k,l).gt.(0.0d0) ) then
          wl = wmax
          wr = wmin
        else
          wl = wmin
          wr = wmax
        end if
        facePhi(i,j,k,l,n) = ( wl*fl + wr*fr )
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
      function g( w, d )
      REAL*8 g, w, d
      g = (d*(1-w)+(w-d)**2)/(d**2+w*(1-(2.0d0)*d))
      return
      end
      subroutine WENO5FACEVALUES_4D(
     & facePhi
     & ,ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
     & ,ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
     & ,nfacePhicomp
     & ,cellPhi
     & ,icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
     & ,icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
     & ,ncellPhicomp
     & ,faceVel
     & ,ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
     & ,ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
     & ,ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
     & ,ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
     & ,idir
     & )
      implicit none
      integer*8 ch_flops
      COMMON/ch_timer/ ch_flops
      integer CHF_ID(0:5,0:5)
      data CHF_ID/ 1,0,0,0,0,0 ,0,1,0,0,0,0 ,0,0,1,0,0,0 ,0,0,0,1,0,0 ,0,0,0,0,1,0 ,0,0,0,0,0,1 /
      integer nfacePhicomp
      integer ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
      integer ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
      REAL*8 facePhi(
     & ifacePhilo0:ifacePhihi0,
     & ifacePhilo1:ifacePhihi1,
     & ifacePhilo2:ifacePhihi2,
     & ifacePhilo3:ifacePhihi3,
     & 0:nfacePhicomp-1)
      integer ncellPhicomp
      integer icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
      integer icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
      REAL*8 cellPhi(
     & icellPhilo0:icellPhihi0,
     & icellPhilo1:icellPhihi1,
     & icellPhilo2:icellPhihi2,
     & icellPhilo3:icellPhihi3,
     & 0:ncellPhicomp-1)
      integer ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
      integer ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
      REAL*8 faceVel(
     & ifaceVello0:ifaceVelhi0,
     & ifaceVello1:ifaceVelhi1,
     & ifaceVello2:ifaceVelhi2,
     & ifaceVello3:ifaceVelhi3)
      integer ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
      integer ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
      integer idir
      integer n, i,j,k,l
      integer ii,jj,kk,ll
      REAL*8 eps
      REAL*8 fl,fr,bl,br,al,ar,wl,wr
      REAL*8 c0,c1,c2,c3
      REAL*8 a0,a1,a2,asuminv
      REAL*8 b0,b1,b2
      REAL*8 v0,v1,v2
      REAL*8 w0,w1,w2
      REAL*8 g
      ii = CHF_ID(idir, 0)
      jj = CHF_ID(idir, 1)
      kk = CHF_ID(idir, 2)
      ll = CHF_ID(idir, 3)
      eps = 1.d-6
      do n=0, (nfacePhicomp-1)
      do l = ifaceBoxlo3,ifaceBoxhi3
      do k = ifaceBoxlo2,ifaceBoxhi2
      do j = ifaceBoxlo1,ifaceBoxhi1
      do i = ifaceBoxlo0,ifaceBoxhi0
        if( faceVel(i,j,k,l).gt.(0.0d0) ) then
          v0 = (1.000d0 / 6.000d0)*(
     & (2.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (5.0d0)*cellPhi(i,j,k,l,n)
     & - cellPhi(i+ii,j+jj,k+kk,l+ll,n) )
          v1 = (1.000d0 / 6.000d0)*(
     & - cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & + (5.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (2.0d0)*cellPhi(i,j,k,l,n) )
          v2 = (1.000d0 / 6.000d0)*(
     & (2.0d0)*cellPhi(i-3*ii,j-3*jj,k-3*kk,l-3*ll,n)
     & - (7.0d0)*cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & + (11.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n) )
          c0 = cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & - cellPhi(i,j,k,l,n)
          c1 = cellPhi(i,j,k,l,n)
     & - cellPhi(i-ii,j-jj,k-kk,l-ll,n)
          c2 = cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & - cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
          c3 = cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & - cellPhi(i-3*ii,j-3*jj,k-3*kk,l-3*ll,n)
        else
          v0 = (1.000d0 / 6.000d0)*(
     & (2.0d0)*cellPhi(i,j,k,l,n)
     & + (5.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & - cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n) )
          v1 = (1.000d0 / 6.000d0)*(
     & - cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & + (5.0d0)*cellPhi(i,j,k,l,n)
     & + (2.0d0)*cellPhi(i-ii,j-jj,k-kk,l-ll,n) )
          v2 = (1.000d0 / 6.000d0)*(
     & (2.0d0)*cellPhi(i+2*ii,j+2*jj,k+2*kk,l+2*ll,n)
     & - (7.0d0)*cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & + (11.0d0)*cellPhi(i,j,k,l,n) )
          c0 = cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & - cellPhi(i-ii,j-jj,k-kk,l-ll,n)
          c1 = cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & - cellPhi(i,j,k,l,n)
          c2 = cellPhi(i,j,k,l,n)
     & - cellPhi(i+ii,j+jj,k+kk,l+ll,n)
          c3 = cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & - cellPhi(i+2*ii,j+2*jj,k+2*kk,l+2*ll,n)
        end if
        b0 = (13.d0 / 12.d0)*(c1-c0)**2+(0.25d0)*((3.0d0)*c1-c0)**2
        b1 = (13.d0 / 12.d0)*(c2-c1)**2+(0.25d0)*(c2+c1)**2
        b2 = (13.d0 / 12.d0)*(c3-c2)**2+(0.25d0)*(c3-(3.0d0)*c2)**2
        a0 = (0.3d0)/((eps+b0)**2)
        a1 = (0.6d0)/((eps+b1)**2)
        a2 = (0.1d0)/((eps+b2)**2)
        asuminv = (1.0d0)/(a0+a1+a2)
        w0 = a0*asuminv
        w1 = a1*asuminv
        w2 = a2*asuminv
        facePhi(i,j,k,l,n) = ( w0*v0 + w1*v1 + w2*v2 )
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
      subroutine UW5FACEVALUES_4D(
     & facePhi
     & ,ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
     & ,ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
     & ,nfacePhicomp
     & ,cellPhi
     & ,icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
     & ,icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
     & ,ncellPhicomp
     & ,faceVel
     & ,ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
     & ,ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
     & ,ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
     & ,ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
     & ,idir
     & )
      implicit none
      integer*8 ch_flops
      COMMON/ch_timer/ ch_flops
      integer CHF_ID(0:5,0:5)
      data CHF_ID/ 1,0,0,0,0,0 ,0,1,0,0,0,0 ,0,0,1,0,0,0 ,0,0,0,1,0,0 ,0,0,0,0,1,0 ,0,0,0,0,0,1 /
      integer nfacePhicomp
      integer ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
      integer ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
      REAL*8 facePhi(
     & ifacePhilo0:ifacePhihi0,
     & ifacePhilo1:ifacePhihi1,
     & ifacePhilo2:ifacePhihi2,
     & ifacePhilo3:ifacePhihi3,
     & 0:nfacePhicomp-1)
      integer ncellPhicomp
      integer icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
      integer icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
      REAL*8 cellPhi(
     & icellPhilo0:icellPhihi0,
     & icellPhilo1:icellPhihi1,
     & icellPhilo2:icellPhihi2,
     & icellPhilo3:icellPhihi3,
     & 0:ncellPhicomp-1)
      integer ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
      integer ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
      REAL*8 faceVel(
     & ifaceVello0:ifaceVelhi0,
     & ifaceVello1:ifaceVelhi1,
     & ifaceVello2:ifaceVelhi2,
     & ifaceVello3:ifaceVelhi3)
      integer ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
      integer ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
      integer idir
      integer n, i,j,k,l
      integer ii,jj,kk,ll
      REAL*8 val
      ii = CHF_ID(idir, 0)
      jj = CHF_ID(idir, 1)
      kk = CHF_ID(idir, 2)
      ll = CHF_ID(idir, 3)
      do n=0, (nfacePhicomp-1)
      do l = ifaceBoxlo3,ifaceBoxhi3
      do k = ifaceBoxlo2,ifaceBoxhi2
      do j = ifaceBoxlo1,ifaceBoxhi1
      do i = ifaceBoxlo0,ifaceBoxhi0
        if( faceVel(i,j,k,l).gt.(0.0d0) ) then
          val = (2.0d0)
     & * cellPhi(i-3*ii,j-3*jj,k-3*kk,l-3*ll,n)
     & - (13.0d0)
     & * cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & + (47.0d0)
     & * cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (27.0d0)
     & * cellPhi(i,j,k,l,n)
     & - (3.0d0)
     & * cellPhi(i+ii,j+jj,k+kk,l+ll,n)
        else
          val = (2.0d0)
     & * cellPhi(i+2*ii,j+2*jj,k+2*kk,l+2*ll,n)
     & - (13.0d0)
     & * cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & + (47.0d0)
     & * cellPhi(i,j,k,l,n)
     & + (27.0d0)
     & * cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & - (3.0d0)
     & * cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
         end if
        facePhi(i,j,k,l,n) = val * (1.0d0 / 60.0d0)
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
      subroutine UW3FACEVALUES_4D(
     & facePhi
     & ,ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
     & ,ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
     & ,nfacePhicomp
     & ,cellPhi
     & ,icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
     & ,icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
     & ,ncellPhicomp
     & ,faceVel
     & ,ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
     & ,ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
     & ,ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
     & ,ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
     & ,idir
     & )
      implicit none
      integer*8 ch_flops
      COMMON/ch_timer/ ch_flops
      integer CHF_ID(0:5,0:5)
      data CHF_ID/ 1,0,0,0,0,0 ,0,1,0,0,0,0 ,0,0,1,0,0,0 ,0,0,0,1,0,0 ,0,0,0,0,1,0 ,0,0,0,0,0,1 /
      integer nfacePhicomp
      integer ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
      integer ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
      REAL*8 facePhi(
     & ifacePhilo0:ifacePhihi0,
     & ifacePhilo1:ifacePhihi1,
     & ifacePhilo2:ifacePhihi2,
     & ifacePhilo3:ifacePhihi3,
     & 0:nfacePhicomp-1)
      integer ncellPhicomp
      integer icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
      integer icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
      REAL*8 cellPhi(
     & icellPhilo0:icellPhihi0,
     & icellPhilo1:icellPhihi1,
     & icellPhilo2:icellPhihi2,
     & icellPhilo3:icellPhihi3,
     & 0:ncellPhicomp-1)
      integer ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
      integer ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
      REAL*8 faceVel(
     & ifaceVello0:ifaceVelhi0,
     & ifaceVello1:ifaceVelhi1,
     & ifaceVello2:ifaceVelhi2,
     & ifaceVello3:ifaceVelhi3)
      integer ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
      integer ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
      integer idir
      integer n, i,j,k,l
      integer ii,jj,kk,ll
      REAL*8 val
      ii = CHF_ID(idir, 0)
      jj = CHF_ID(idir, 1)
      kk = CHF_ID(idir, 2)
      ll = CHF_ID(idir, 3)
      do n=0, (nfacePhicomp-1)
      do l = ifaceBoxlo3,ifaceBoxhi3
      do k = ifaceBoxlo2,ifaceBoxhi2
      do j = ifaceBoxlo1,ifaceBoxhi1
      do i = ifaceBoxlo0,ifaceBoxhi0
        if( faceVel(i,j,k,l).gt.(0.0d0) ) then
          val = - (1.0d0)
     & * cellPhi(i-2*ii,j-2*jj,k-2*kk,l-2*ll,n)
     & + (5.0d0)
     & * cellPhi(i-ii,j-jj,k-kk,l-ll,n)
     & + (2.0d0)
     & * cellPhi(i,j,k,l,n)
        else
          val = - (1.0d0)
     & * cellPhi(i+ii,j+jj,k+kk,l+ll,n)
     & + (5.0d0)
     & * cellPhi(i,j,k,l,n)
     & + (2.0d0)
     & * cellPhi(i-ii,j-jj,k-kk,l-ll,n)
         end if
        facePhi(i,j,k,l,n) = val * (1.000d0 / 6.000d0)
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
      subroutine UW1FACEVALUES_4D(
     & facePhi
     & ,ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
     & ,ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
     & ,nfacePhicomp
     & ,cellPhi
     & ,icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
     & ,icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
     & ,ncellPhicomp
     & ,faceVel
     & ,ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
     & ,ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
     & ,ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
     & ,ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
     & ,idir
     & )
      implicit none
      integer*8 ch_flops
      COMMON/ch_timer/ ch_flops
      integer CHF_ID(0:5,0:5)
      data CHF_ID/ 1,0,0,0,0,0 ,0,1,0,0,0,0 ,0,0,1,0,0,0 ,0,0,0,1,0,0 ,0,0,0,0,1,0 ,0,0,0,0,0,1 /
      integer nfacePhicomp
      integer ifacePhilo0,ifacePhilo1,ifacePhilo2,ifacePhilo3
      integer ifacePhihi0,ifacePhihi1,ifacePhihi2,ifacePhihi3
      REAL*8 facePhi(
     & ifacePhilo0:ifacePhihi0,
     & ifacePhilo1:ifacePhihi1,
     & ifacePhilo2:ifacePhihi2,
     & ifacePhilo3:ifacePhihi3,
     & 0:nfacePhicomp-1)
      integer ncellPhicomp
      integer icellPhilo0,icellPhilo1,icellPhilo2,icellPhilo3
      integer icellPhihi0,icellPhihi1,icellPhihi2,icellPhihi3
      REAL*8 cellPhi(
     & icellPhilo0:icellPhihi0,
     & icellPhilo1:icellPhihi1,
     & icellPhilo2:icellPhihi2,
     & icellPhilo3:icellPhihi3,
     & 0:ncellPhicomp-1)
      integer ifaceVello0,ifaceVello1,ifaceVello2,ifaceVello3
      integer ifaceVelhi0,ifaceVelhi1,ifaceVelhi2,ifaceVelhi3
      REAL*8 faceVel(
     & ifaceVello0:ifaceVelhi0,
     & ifaceVello1:ifaceVelhi1,
     & ifaceVello2:ifaceVelhi2,
     & ifaceVello3:ifaceVelhi3)
      integer ifaceBoxlo0,ifaceBoxlo1,ifaceBoxlo2,ifaceBoxlo3
      integer ifaceBoxhi0,ifaceBoxhi1,ifaceBoxhi2,ifaceBoxhi3
      integer idir
      integer n, i,j,k,l
      integer ii,jj,kk,ll
      REAL*8 val
      ii = CHF_ID(idir, 0)
      jj = CHF_ID(idir, 1)
      kk = CHF_ID(idir, 2)
      ll = CHF_ID(idir, 3)
      do n=0, (nfacePhicomp-1)
      do l = ifaceBoxlo3,ifaceBoxhi3
      do k = ifaceBoxlo2,ifaceBoxhi2
      do j = ifaceBoxlo1,ifaceBoxhi1
      do i = ifaceBoxlo0,ifaceBoxhi0
        if( faceVel(i,j,k,l).gt.(0.0d0) ) then
          val = cellPhi(i-ii,j-jj,k-kk,l-ll,n)
        else
          val = cellPhi(i,j,k,l,n)
         end if
        facePhi(i,j,k,l,n) = val
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
